{"version":3,"sources":["redux/favouritesSlice.js","components/quotes/QuotesListItem.js","components/quotes/QuotesList.js","components/charaters/CharacterListItem.js","components/charaters/CharacterList.js","components/search/index.js","redux/charactersSlice.js","components/AppDivider.js","redux/quoteSlice.js","components/RandomQuote.js","App.js","theme.js","redux/store.js","index.js"],"names":["favouritesSlice","createSlice","name","initialState","JSON","parse","window","localStorage","getItem","reducers","addFavorite","state","action","favourite","id","payload","quote","push","setItem","stringify","removeFavorite","filteredState","filter","actions","QuotesListItem","quoteObject","theme","useMantineTheme","favouritesArray","useSelector","favourites","dispatch","useDispatch","handleAddToFavourite","React","useCallback","handleRemoveFavourite","direction","styles","root","backgroundColor","colors","sand","borderLeftColor","apolloBlue","icon","color","find","item","onClick","size","gold","style","alignSelf","cursor","QuotesList","quotes","position","top","zIndex","wordWrap","fontSize","map","padding","shadow","radius","ebony","CharacterListItem","character","house","imageFull","useToggle","isModalOpen","toggleModalOpen","e","borderRadius","margin","src","height","marginBottom","variant","border","inner","alignItems","modal","opened","onClose","CharacterList","dataArr","filteredArrayBySearchValue","debouncedSearchValue","charactersData","characters","data","length","xs","md","lg","slug","searchBarRightSection","display","HomeSearch","searchValue","setSearchValue","searchRef","useRef","useHotkeys","current","focus","elementRef","placeholder","rightSectionWidth","rightSection","pointerEvents","value","onChange","target","getCharactersAsync","createAsyncThunk","a","axios","get","details","response","message","charactersSlice","isLoading","error","extraReducers","pending","_","fulfilled","rejected","AppDivider","text","Icon","margins","labelPosition","label","width","marginLeft","getRandomQuoteAsync","fetchedData","quoteSlice","RandomQuote","useEffect","cite","sentence","App","useState","setFilteredArrayBySearchValue","useDebouncedValue","filteredSearchInputArr","includes","fill","fluid","textAlign","className","Theme","children","configureStore","reducer","charactersReducer","favouritesReducer","quoteReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.3e52c157.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\nexport const favouritesSlice = createSlice({\r\n\tname: 'favourites',\r\n\tinitialState: JSON.parse(window.localStorage.getItem('favourites')) || [],\r\n\treducers: {\r\n\t\taddFavorite: (state, action) => {\r\n\t\t\tconst favourite = {\r\n\t\t\t\tid: action.payload.id,\r\n\t\t\t\tquote: action.payload.quote,\r\n\t\t\t}\r\n\t\t\tstate.push(favourite)\r\n\t\t\twindow.localStorage.setItem('favourites', JSON.stringify(state))\r\n\t\t},\r\n\t\tremoveFavorite: (state, action) => {\r\n\t\t\tconst filteredState = state.filter(\r\n\t\t\t\tfavourite => favourite.id !== action.payload.id,\r\n\t\t\t)\r\n\t\t\twindow.localStorage.setItem('favourites', JSON.stringify(filteredState))\r\n\r\n\t\t\treturn filteredState\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport const {addFavorite, removeFavorite} = favouritesSlice.actions\r\n\r\nexport default favouritesSlice.reducer\r\n","import {Blockquote, Group, useMantineTheme} from '@mantine/core'\r\nimport React from 'react'\r\nimport {AiOutlineHeart, AiFillHeart} from 'react-icons/ai'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {addFavorite, removeFavorite} from '../../redux/favouritesSlice'\r\n\r\nconst QuotesListItem = ({quote: quoteObject}) => {\r\n\tconst {id, quote} = quoteObject\r\n\tconst theme = useMantineTheme()\r\n\tconst favouritesArray = useSelector(state => state.favourites)\r\n\r\n\tconst dispatch = useDispatch()\r\n\tfunction isFav() {\r\n\t\treturn favouritesArray?.find(item => item.id === id)\r\n\t}\r\n\tconst handleAddToFavourite = React.useCallback(() => {\r\n\t\tdispatch(addFavorite({id, quote}))\r\n\t}, [id, quote, dispatch])\r\n\tconst handleRemoveFavourite = React.useCallback(() => {\r\n\t\tdispatch(removeFavorite({id}))\r\n\t}, [id, dispatch])\r\n\treturn (\r\n\t\t<Group direction='column'>\r\n\t\t\t<Blockquote\r\n\t\t\t\tstyles={{\r\n\t\t\t\t\troot: {\r\n\t\t\t\t\t\tbackgroundColor: theme.colors.sand,\r\n\t\t\t\t\t\tborderLeftColor: theme.colors.apolloBlue,\r\n\t\t\t\t\t},\r\n\t\t\t\t\ticon: {\r\n\t\t\t\t\t\tcolor: theme.colors.apolloBlue,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h3>{quote}</h3>\r\n\t\t\t</Blockquote>\r\n\t\t\t{!isFav() ? (\r\n\t\t\t\t<AiOutlineHeart\r\n\t\t\t\t\tonClick={handleAddToFavourite}\r\n\t\t\t\t\tsize={30}\r\n\t\t\t\t\tcolor={theme.colors.gold}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t) : (\r\n\t\t\t\t<AiFillHeart\r\n\t\t\t\t\tonClick={handleRemoveFavourite}\r\n\t\t\t\t\tsize={30}\r\n\t\t\t\t\tcolor={theme.colors.gold}\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\talignSelf: 'center',\r\n\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</Group>\r\n\t)\r\n}\r\n\r\nexport default QuotesListItem\r\n","import React from 'react'\r\nimport QuotesListItem from './QuotesListItem'\r\nimport {Group, Paper, useMantineTheme} from '@mantine/core'\r\nconst QuotesList = ({quotes, name}) => {\r\n\tconst theme = useMantineTheme()\r\n\treturn (\r\n\t\t<Group\r\n\t\t\tdirection='column'\r\n\t\t\tposition='center'\r\n\t\t\tstyle={{\r\n\t\t\t\tposition: 'absolute',\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Group\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tposition: 'sticky',\r\n\t\t\t\t\ttop: 100,\r\n\t\t\t\t\tzIndex: -5,\r\n\t\t\t\t\twordWrap: 'break-word',\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<h1\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tfontSize: '20rem',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</h1>\r\n\t\t\t</Group>\r\n\t\t\t{quotes.map(quote => (\r\n\t\t\t\t<Paper\r\n\t\t\t\t\tpadding='lg'\r\n\t\t\t\t\tshadow='xs'\r\n\t\t\t\t\tradius='lg'\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundColor: theme.colors.ebony,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tkey={quote.id}\r\n\t\t\t\t>\r\n\t\t\t\t\t<QuotesListItem quote={quote} />\r\n\t\t\t\t</Paper>\r\n\t\t\t))}\r\n\t\t</Group>\r\n\t)\r\n}\r\n\r\nexport default QuotesList\r\n","import {Card, Badge, useMantineTheme, Group, Modal, Image} from '@mantine/core'\r\nimport {useToggle} from '@mantine/hooks'\r\nimport React from 'react'\r\nimport QuotesList from '../quotes/QuotesList'\r\n\r\nconst CharacterListItem = ({character}) => {\r\n\tconst theme = useMantineTheme()\r\n\tconst {house, imageFull, name, quotes} = character\r\n\tconst [isModalOpen, toggleModalOpen] = useToggle(false, [false, true])\r\n\tconst handleCardOnClick = e => {\r\n\t\ttoggleModalOpen()\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Card\r\n\t\t\t\tonClick={handleCardOnClick}\r\n\t\t\t\tshadow='lg'\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\tbackgroundColor: theme.colors.ebony,\r\n\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\tborderRadius: 10,\r\n\t\t\t\t\tmargin: 10,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<Image src={imageFull} height={350} />\r\n\t\t\t\t<Group position='center' direction='column' style={{marginBottom: 5}}>\r\n\t\t\t\t\t<h1>{name}</h1>\r\n\t\t\t\t\t<Badge\r\n\t\t\t\t\t\tvariant='outline'\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tborder: theme.colors.ebony,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{house ? house.name : 'No House'}\r\n\t\t\t\t\t</Badge>\r\n\t\t\t\t</Group>\r\n\t\t\t</Card>\r\n\t\t\t<Modal\r\n\t\t\t\tsize='75%'\r\n\t\t\t\tstyles={{\r\n\t\t\t\t\tinner: {\r\n\t\t\t\t\t\talignItems: 'center',\r\n\t\t\t\t\t\tbackgroundColor: theme.colors.ebony,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmodal: {\r\n\t\t\t\t\t\tbackgroundColor: theme.colors.sand,\r\n\t\t\t\t\t},\r\n\t\t\t\t}}\r\n\t\t\t\topened={isModalOpen}\r\n\t\t\t\tonClose={() => toggleModalOpen()}\r\n\t\t\t>\r\n\t\t\t\t<QuotesList quotes={quotes} name={name} />\r\n\t\t\t</Modal>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default CharacterListItem\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Container, Col, Row} from 'react-grid-system'\r\nimport CharacterListItem from './CharacterListItem'\r\n\r\nconst CharacterList = ({filteredArrayBySearchValue, debouncedSearchValue}) => {\r\n\tlet {data: charactersData} = useSelector(state => state.characters)\r\n\tlet dataArr\r\n\tif (filteredArrayBySearchValue.length > 0 && debouncedSearchValue) {\r\n\t\tdataArr = filteredArrayBySearchValue\r\n\t} else {\r\n\t\tdataArr = charactersData\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Row>\r\n\t\t\t\t{dataArr.map(character => (\r\n\t\t\t\t\t<Col xs={12} md={6} lg={4} key={character.slug}>\r\n\t\t\t\t\t\t<CharacterListItem character={character} />\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t))}\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t)\r\n}\r\n\r\nexport default CharacterList\r\n","import {Kbd, TextInput} from '@mantine/core'\r\nimport {useRef} from 'react'\r\nimport {useHotkeys} from 'react-hotkeys-hook'\r\nimport {MagnifyingGlassIcon} from '@modulz/radix-icons'\r\n\r\nexport const searchBarRightSection = (\r\n\t<div style={{display: 'flex', alignItems: 'center'}}>\r\n\t\t<Kbd>Ctrl</Kbd>\r\n\t\t<span style={{margin: '0 5px'}}>+</span>\r\n\t\t<Kbd>/</Kbd>\r\n\t</div>\r\n)\r\n\r\nconst HomeSearch = ({searchValue, setSearchValue}) => {\r\n\tconst searchRef = useRef()\r\n\t// Hot key for immediate search\r\n\tuseHotkeys('ctrl+/', () => {\r\n\t\tsearchRef.current.focus()\r\n\t})\r\n\r\n\tfunction handleSearchOnChange(e) {\r\n\t\tsetSearchValue(e.target.value)\r\n\t}\r\n\treturn (\r\n\t\t<TextInput\r\n\t\t\telementRef={searchRef}\r\n\t\t\tplaceholder='Search'\r\n\t\t\ticon={<MagnifyingGlassIcon />}\r\n\t\t\trightSectionWidth={90}\r\n\t\t\trightSection={searchBarRightSection}\r\n\t\t\tstyles={{rightSection: {pointerEvents: 'none'}}}\r\n\t\t\tvalue={searchValue}\r\n\t\t\tonChange={handleSearchOnChange}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default HomeSearch\r\n","import {createAsyncThunk, createSlice} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getCharactersAsync = createAsyncThunk(\r\n\t'characters/getCharactersAsync',\r\n\tasync () => {\r\n\t\tif (window.localStorage.getItem('characters')) {\r\n\t\t\treturn JSON.parse(window.localStorage.getItem('characters'))\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst {data} = await axios.get(\r\n\t\t\t\t'https://raw.githubusercontent.com/ghana7989/got-quotes-api/main/Details.json',\r\n\t\t\t)\r\n\t\t\tif (data?.details?.length) {\r\n\t\t\t\twindow.localStorage.setItem('characters', JSON.stringify(data.details))\r\n\t\t\t\treturn data.details\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\treturn e.response.message\r\n\t\t}\r\n\t},\r\n)\r\n\r\nexport const charactersSlice = createSlice({\r\n\tname: 'characters',\r\n\tinitialState: {\r\n\t\tisLoading: false,\r\n\t\terror: null,\r\n\t\tdata: [],\r\n\t},\r\n\treducers: {},\r\n\textraReducers: {\r\n\t\t[getCharactersAsync.pending]: (state, _) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: true,\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getCharactersAsync.fulfilled]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tdata: action.payload,\r\n\t\t\t}\r\n\t\t},\r\n\t\t[getCharactersAsync.rejected]: (state, action) => {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisLoading: false,\r\n\t\t\t\tdata: [],\r\n\t\t\t\terror: action.payload,\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default charactersSlice.reducer\r\n","import {MagnifyingGlassIcon} from '@modulz/radix-icons'\r\nimport {useMantineTheme, Divider} from '@mantine/core'\r\nimport React from 'react'\r\n\r\nconst AppDivider = ({text, Icon}) => {\r\n\tconst theme = useMantineTheme()\r\n\treturn (\r\n\t\t<Divider\r\n\t\t\tmargins='lg'\r\n\t\t\tvariant='solid'\r\n\t\t\tlabelPosition='center'\r\n\t\t\tlabel={\r\n\t\t\t\t<>\r\n\t\t\t\t\t{Icon ? (\r\n\t\t\t\t\t\tIcon\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<MagnifyingGlassIcon\r\n\t\t\t\t\t\t\tstyle={{width: 20, height: 20, color: theme.colors.sand}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<span style={{marginLeft: 5}}>{text}</span>\r\n\t\t\t\t</>\r\n\t\t\t}\r\n\t\t/>\r\n\t)\r\n}\r\n\r\nexport default AppDivider\r\n","import {createSlice, createAsyncThunk} from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getRandomQuoteAsync = createAsyncThunk(\r\n\t'quote/getRandomQuoteAsync',\r\n\tasync function () {\r\n\t\tconst {data: fetchedData} = await axios.get(\r\n\t\t\t'https://game-of-thrones-quotes.herokuapp.com/v1/random',\r\n\t\t)\r\n\t\treturn fetchedData\r\n\t},\r\n)\r\n\r\nexport const quoteSlice = createSlice({\r\n\tname: 'quote',\r\n\tinitialState: {},\r\n\treducers: {},\r\n\textraReducers: {\r\n\t\t[getRandomQuoteAsync.fulfilled]: (_, action) => {\r\n\t\t\treturn action.payload\r\n\t\t},\r\n\t},\r\n})\r\n\r\nexport default quoteSlice.reducer\r\n","import React, {useEffect} from 'react'\r\nimport {useMantineTheme, Blockquote} from '@mantine/core'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {getRandomQuoteAsync} from '../redux/quoteSlice'\r\n\r\nconst RandomQuote = () => {\r\n\tconst quote = useSelector(state => state.quote)\r\n\tconst dispatch = useDispatch()\r\n\tuseEffect(() => {\r\n\t\tdispatch(getRandomQuoteAsync())\r\n\t}, [dispatch])\r\n\tconst theme = useMantineTheme()\r\n\tif (!quote) return <></>\r\n\treturn (\r\n\t\t<Blockquote\r\n\t\t\tcite={`- ${quote?.character?.name}`}\r\n\t\t\tstyles={{\r\n\t\t\t\troot: {\r\n\t\t\t\t\tbackgroundColor: theme.colors.sand,\r\n\t\t\t\t\tborderLeftColor: theme.colors.gold,\r\n\t\t\t\t},\r\n\t\t\t\ticon: {\r\n\t\t\t\t\tcolor: theme.colors.gold,\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<h3>{quote.sentence}</h3>\r\n\t\t</Blockquote>\r\n\t)\r\n}\r\n\r\nexport default RandomQuote\r\n","import {useMantineTheme, Center, Loader} from '@mantine/core'\nimport {useEffect, useState} from 'react'\nimport {Container, Row, Col} from 'react-grid-system'\nimport {useDispatch, useSelector} from 'react-redux'\nimport CharacterList from './components/charaters/CharacterList'\nimport HomeSearch from './components/search'\nimport {getCharactersAsync} from './redux/charactersSlice'\nimport AppDivider from './components/AppDivider'\nimport RandomQuote from './components/RandomQuote'\nimport {useDebouncedValue} from '@mantine/hooks'\nfunction App() {\n\tconst dispatch = useDispatch()\n\tconst {isLoading, data} = useSelector(state => state.characters)\n\tconst [filteredArrayBySearchValue, setFilteredArrayBySearchValue] = useState(\n\t\t[],\n\t)\n\tconst [searchValue, setSearchValue] = useState('')\n\tconst [debouncedSearchValue] = useDebouncedValue(searchValue, 500)\n\n\tuseEffect(() => {\n\t\tdispatch(getCharactersAsync())\n\t}, [dispatch])\n\tuseEffect(() => {\n\t\tif (debouncedSearchValue) {\n\t\t\tconst filteredSearchInputArr = data.filter(character => {\n\t\t\t\treturn (\n\t\t\t\t\tcharacter.name.includes(debouncedSearchValue) ||\n\t\t\t\t\tcharacter.slug.includes(debouncedSearchValue) ||\n\t\t\t\t\tcharacter?.house?.name.includes(debouncedSearchValue)\n\t\t\t\t)\n\t\t\t})\n\t\t\tsetFilteredArrayBySearchValue(filteredSearchInputArr)\n\t\t}\n\t}, [debouncedSearchValue, data])\n\tconst theme = useMantineTheme()\n\n\tif (isLoading) {\n\t\treturn (\n\t\t\t<Center\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '100vw',\n\t\t\t\t\theight: '100vh',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<Loader\n\t\t\t\t\tsize={50}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tfill: theme.colors.sand[0],\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Center>\n\t\t)\n\t}\n\treturn (\n\t\t<Container fluid>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<Center\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<h1 className='logo'>Quotes of thrones</h1>\n\t\t\t\t\t</Center>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{/* Search Bar */}\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<HomeSearch\n\t\t\t\t\t\tsearchValue={searchValue}\n\t\t\t\t\t\tsetSearchValue={setSearchValue}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<RandomQuote />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t{/* Divider */}\n\t\t\t<AppDivider text='Search Results' />\n\t\t\t{/* All Cards */}\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<CharacterList\n\t\t\t\t\t\tfilteredArrayBySearchValue={filteredArrayBySearchValue}\n\t\t\t\t\t\tdebouncedSearchValue={debouncedSearchValue}\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t)\n}\n\nexport default App\n","import React from 'react'\r\nimport {MantineProvider} from '@mantine/core'\r\n\r\nfunction Theme({children}) {\r\n\treturn (\r\n\t\t<MantineProvider\r\n\t\t\ttheme={{\r\n\t\t\t\tcolors: {\r\n\t\t\t\t\tebony: ['#4A4957'],\r\n\t\t\t\t\tsand: ['#F1D8BF'],\r\n\t\t\t\t\tgold: ['#B18643'],\r\n\t\t\t\t\tapolloBlue: ['#788483'],\r\n\t\t\t\t},\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</MantineProvider>\r\n\t)\r\n}\r\n\r\nexport default Theme\r\n","import {configureStore} from '@reduxjs/toolkit'\r\nimport charactersReducer from './charactersSlice'\r\nimport favouritesReducer from './favouritesSlice'\r\nimport quoteReducer from './quoteSlice'\r\n\r\nexport default configureStore({\r\n\treducer: {\r\n\t\tcharacters: charactersReducer,\r\n\t\tfavourites: favouritesReducer,\r\n\t\tquote: quoteReducer,\r\n\t},\r\n})\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport Theme from './theme'\nimport {NormalizeCSS} from '@mantine/core'\nimport {Provider} from 'react-redux'\nimport store from './redux/store'\n\nReactDOM.render(\n\t<Theme>\n\t\t<NormalizeCSS />\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</Theme>,\n\tdocument.getElementById('root'),\n)\n"],"sourceRoot":""}